{"remainingRequest":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\src\\views\\adminActivity.vue?vue&type=template&id=0314b4d4&","dependencies":[{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\src\\views\\adminActivity.vue","mtime":1615517638368},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615517626407},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1615517637464},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615517626407},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1615517637463}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}