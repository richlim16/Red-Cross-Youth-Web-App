{"remainingRequest":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\src\\views\\docs.vue?vue&type=template&id=623a4856&scoped=true&","dependencies":[{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\src\\views\\docs.vue","mtime":1617851617289},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615517626407},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1615517637464},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615517626407},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1615517637463}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jcyIgfSwgW19jKCJuIiksIF92bS5fbSgwKSwgX2MoImYiKV0sIDEpCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAic2VjdGlvbiIsCiAgICAgIHsKICAgICAgICBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICAgIHN0YXRpY1N0eWxlOiB7IGhlaWdodDogIjEwMCUiLCAicGFkZGluZy1ib3R0b20iOiAiMCIgfSwKICAgICAgICBhdHRyczogeyBpZDogImhlcm8iIH0KICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiwKICAgICAgICAgICAgYXR0cnM6IHsgImRhdGEtYW9zIjogInpvb20tb3V0IiwgImRhdGEtYW9zLWRlbGF5IjogIjEwMCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImgxIiwgW192bS5fdigiRG9jdW1lbnRzIildKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3Jtc0NvbnRhaW5lciIgfSwgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6ICIvaW1hZ2VzL0ljb25zL21lbWJlcnNoaXBJY29uLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgYWx0OiAicmVkY3Jvc3MgbG9nbyBoZXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCJNZW1iZXJzaGlwIEZvcm0iKV0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiL21lbWJlcnNoaXBGb3JtIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJNYWtlIEZvcm0iKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiAiL2ltYWdlcy9JY29ucy9Db3VuY2lsTW9udGhseUljb24ucG5nIiwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICJyZWRjcm9zcyBsb2dvIGhlcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJoMyIsIFtfdm0uX3YoIkNvdW5jaWwgTW9udGhseSBSZXBvcnRzIildKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9jb3VuY2lsTW9udGhseVJlcG9ydEZvcm0iIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIk1ha2UgRm9ybSIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6ICIvaW1hZ2VzL0ljb25zL1VuaWZvcm1SZXFJY29uLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgYWx0OiAicmVkY3Jvc3MgbG9nbyBoZXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCJVbmlmb3JtIFJlcXVlc3QgRm9ybXMiKV0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiL3VuaWZSZXF1ZXN0IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJNYWtlIEZvcm0iKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiAiL2ltYWdlcy9JY29ucy9Db21taXR0ZWVNZW1iZXJzaGlwSWNvbi5wbmciLAogICAgICAgICAgICAgICAgICAgIGFsdDogInJlZGNyb3NzIGxvZ28gaGVyZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImgzIiwgW192bS5fdigiQ29tbWl0dGVlIE1lbWJlcnNoaXAgRm9ybXMiKV0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiL2NvbW1pdHRlZUZvcm0iIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIk1ha2UgRm9ybSIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6ICIvaW1hZ2VzL0ljb25zL0FjdGl2aXR5UmVxSWNvbi5wbmciLAogICAgICAgICAgICAgICAgICAgIGFsdDogInJlZGNyb3NzIGxvZ28gaGVyZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImgzIiwgW192bS5fdigiQWN0aXZpdHkgUmVxdWVzdCBGb3JtcyIpXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvYWN0aXZpdHlSZXF1ZXN0Rm9ybSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiTWFrZSBGb3JtIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogIi9pbWFnZXMvSWNvbnMvQWN0aXZpdHlSZXBvcnRJY29uLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgYWx0OiAicmVkY3Jvc3MgbG9nbyBoZXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCJBY3Rpdml0eSBSZXBvcnQgRm9ybXMiKV0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiL2FjdGl2aXR5UmVwb3J0Rm9ybSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiTWFrZSBGb3JtIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogIi9pbWFnZXMvSWNvbnMvU2VydmljZVJlcUljb24ucG5nIiwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICJyZWRjcm9zcyBsb2dvIGhlcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJoMyIsIFtfdm0uX3YoIlNlcnZpY2UgUmVxdWVzdCBGb3JtcyIpXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvbWVtYmVyc2hpcEZvcm0iIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIk1ha2UgRm9ybSIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdCiAgICAgICAgKQogICAgICBdCiAgICApCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}