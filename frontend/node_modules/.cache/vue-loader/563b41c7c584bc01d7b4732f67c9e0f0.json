{"remainingRequest":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\src\\views\\membershipForm.vue?vue&type=template&id=2ba25558&scoped=true&lang=html&","dependencies":[{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\src\\views\\membershipForm.vue","mtime":1616033857221},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615517626407},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1615517637464},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615517626407},{"path":"C:\\Users\\richl\\Desktop\\Red-Cross-Youth-Web-App\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1615517637463}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}